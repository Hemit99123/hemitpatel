/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 ./public/models/totempole.gltf 
Author: rafapages (https://sketchfab.com/rafapages)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/a-totem-pole-in-vancouver-canada-5787438d1c7e43abb9f6228d791d9bc3
Title: A totem pole in Vancouver, Canada
*/

// @ts-nocheck

import React from 'react'
import { useGLTF } from '@react-three/drei'

export function TotemPole(props) {
  const { nodes, materials } = useGLTF('./models/totempole.gltf')
  return (
    <group {...props} dispose={null}>
      <group position={[0, 1.053, 1.216]} rotation={[3.092, 0, 0]}>
        <mesh geometry={nodes.Object_2.geometry} material={materials['Scene_-_Root']} />
        <mesh geometry={nodes.Object_3.geometry} material={materials['Scene_-_Root']} />
        <mesh geometry={nodes.Object_4.geometry} material={materials['Scene_-_Root']} />
        <mesh geometry={nodes.Object_5.geometry} material={materials['Scene_-_Root']} />
        <mesh geometry={nodes.Object_6.geometry} material={materials['Scene_-_Root']} />
        <mesh geometry={nodes.Object_7.geometry} material={materials['Scene_-_Root']} />
        <mesh geometry={nodes.Object_8.geometry} material={materials['Scene_-_Root']} />
        <mesh geometry={nodes.Object_9.geometry} material={materials['Scene_-_Root']} />
        <mesh geometry={nodes.Object_10.geometry} material={materials['Scene_-_Root']} />
        <mesh geometry={nodes.Object_11.geometry} material={materials['Scene_-_Root']} />
        <mesh geometry={nodes.Object_12.geometry} material={materials['Scene_-_Root']} />
        <mesh geometry={nodes.Object_13.geometry} material={materials['Scene_-_Root']} />
        <mesh geometry={nodes.Object_14.geometry} material={materials['Scene_-_Root']} />
        <mesh geometry={nodes.Object_15.geometry} material={materials['Scene_-_Root']} />
        <mesh geometry={nodes.Object_16.geometry} material={materials['Scene_-_Root']} />
      </group>
    </group>
  )
}

useGLTF.preload('./models/totempole.gltf')
